{"ast":null,"code":"var _jsxFileName = \"/Users/arvindsudarshan/Documents/Hindi-QA/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in when the app loads\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    const refreshToken = localStorage.getItem('refreshToken');\n    const userInfo = localStorage.getItem('userInfo');\n    if (accessToken && refreshToken && userInfo) {\n      setUser({\n        accessToken,\n        refreshToken,\n        ...JSON.parse(userInfo)\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async (accessToken, refreshToken, userInfo) => {\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n    setUser({\n      accessToken,\n      refreshToken,\n      ...userInfo\n    });\n  };\n  const logout = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        await axios.post('http://localhost:8000/api/auth/logout/', {\n          refresh: refreshToken\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('userInfo');\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","accessToken","localStorage","getItem","refreshToken","userInfo","JSON","parse","login","setItem","stringify","logout","post","refresh","headers","error","console","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/arvindsudarshan/Documents/Hindi-QA/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in when the app loads\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    const refreshToken = localStorage.getItem('refreshToken');\n    const userInfo = localStorage.getItem('userInfo');\n    \n    if (accessToken && refreshToken && userInfo) {\n      setUser({\n        accessToken,\n        refreshToken,\n        ...JSON.parse(userInfo)\n      });\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (accessToken, refreshToken, userInfo) => {\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n    \n    setUser({\n      accessToken,\n      refreshToken,\n      ...userInfo\n    });\n  };\n\n  const logout = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        await axios.post('http://localhost:8000/api/auth/logout/', \n          { refresh: refreshToken },\n          {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n            }\n          }\n        );\n      }\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('userInfo');\n      setUser(null);\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAE,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,MAAME,QAAQ,GAAGH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,IAAIF,WAAW,IAAIG,YAAY,IAAIC,QAAQ,EAAE;MAC3CP,OAAO,CAAC;QACNG,WAAW;QACXG,YAAY;QACZ,GAAGE,IAAI,CAACC,KAAK,CAACF,QAAQ;MACxB,CAAC,CAAC;IACJ;IACAL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAAA,CAAOP,WAAW,EAAEG,YAAY,EAAEC,QAAQ,KAAK;IAC3DH,YAAY,CAACO,OAAO,CAAC,aAAa,EAAER,WAAW,CAAC;IAChDC,YAAY,CAACO,OAAO,CAAC,cAAc,EAAEL,YAAY,CAAC;IAClDF,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAACL,QAAQ,CAAC,CAAC;IAE1DP,OAAO,CAAC;MACNG,WAAW;MACXG,YAAY;MACZ,GAAGC;IACL,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMP,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAIC,YAAY,EAAE;QAChB,MAAMd,KAAK,CAACsB,IAAI,CAAC,wCAAwC,EACvD;UAAEC,OAAO,EAAET;QAAa,CAAC,EACzB;UACEU,OAAO,EAAE;YACP,eAAe,EAAE,UAAUZ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;UAChE;QACF,CACF,CAAC;MACH;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRb,YAAY,CAACe,UAAU,CAAC,aAAa,CAAC;MACtCf,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;MACvCf,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;MACnCnB,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EAED,MAAMoB,KAAK,GAAG;IACZrB,IAAI;IACJW,KAAK;IACLG,MAAM;IACNZ;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;;AAED;AAAA3B,EAAA,CArEaF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAsEzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACkC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAQpB,eAAehC,WAAW;AAAC,IAAA+B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
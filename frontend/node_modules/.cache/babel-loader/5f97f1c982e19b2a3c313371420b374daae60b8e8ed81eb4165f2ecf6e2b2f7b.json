{"ast":null,"code":"var _jsxFileName = \"/Users/arvindsudarshan/Documents/Hindi-QA/frontend/src/pages/TranscriptsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, Box, Alert, CircularProgress, Paper } from '@mui/material';\nimport TranscriptCard from '../components/TranscriptCard';\nimport transcriptService from '../services/transcriptService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptsPage = () => {\n  _s();\n  const [videoUrl, setVideoUrl] = useState('');\n  const [transcripts, setTranscripts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    fetchTranscripts();\n  }, []);\n  const fetchTranscripts = async () => {\n    try {\n      const data = await transcriptService.getAllTranscripts();\n      setTranscripts(data);\n    } catch (error) {\n      setError('Failed to fetch transcripts. Please try again later.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      var _videoUrl$split$;\n      // Extract video ID from URL\n      const videoId = (_videoUrl$split$ = videoUrl.split('v=')[1]) === null || _videoUrl$split$ === void 0 ? void 0 : _videoUrl$split$.split('&')[0];\n      if (!videoId) {\n        throw new Error('Invalid YouTube URL');\n      }\n      const newTranscript = await transcriptService.createTranscript(videoId);\n      setTranscripts([newTranscript, ...transcripts]);\n      setVideoUrl('');\n      setSuccess('Transcript created successfully!');\n    } catch (error) {\n      setError(error.message || 'Failed to create transcript. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await transcriptService.deleteTranscript(id);\n      setTranscripts(transcripts.filter(t => t.id !== id));\n      setSuccess('Transcript deleted successfully!');\n    } catch (error) {\n      setError('Failed to delete transcript. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"My Transcripts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        p: 3,\n        mb: 4,\n        backgroundColor: 'background.paper'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"YouTube Video URL\",\n          value: videoUrl,\n          onChange: e => setVideoUrl(e.target.value),\n          placeholder: \"https://www.youtube.com/watch?v=...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          disabled: loading || !videoUrl,\n          sx: {\n            minWidth: 200\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }, this) : 'Create Transcript'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setSuccess(''),\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: transcripts.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"No transcripts yet. Create one by pasting a YouTube URL above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : transcripts.map(transcript => /*#__PURE__*/_jsxDEV(TranscriptCard, {\n        transcript: transcript,\n        onDelete: handleDelete\n      }, transcript.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TranscriptsPage, \"9CvOPCF74LSPmHhCTtRuVN+TG9I=\");\n_c = TranscriptsPage;\nexport default TranscriptsPage;\nvar _c;\n$RefreshReg$(_c, \"TranscriptsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","Box","Alert","CircularProgress","Paper","TranscriptCard","transcriptService","jsxDEV","_jsxDEV","TranscriptsPage","_s","videoUrl","setVideoUrl","transcripts","setTranscripts","loading","setLoading","error","setError","success","setSuccess","fetchTranscripts","data","getAllTranscripts","handleSubmit","e","preventDefault","_videoUrl$split$","videoId","split","Error","newTranscript","createTranscript","message","handleDelete","id","deleteTranscript","filter","t","maxWidth","sx","py","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","p","mb","backgroundColor","display","gap","fullWidth","label","value","onChange","target","placeholder","disabled","type","minWidth","size","severity","onClose","mt","length","color","align","map","transcript","onDelete","_c","$RefreshReg$"],"sources":["/Users/arvindsudarshan/Documents/Hindi-QA/frontend/src/pages/TranscriptsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  Alert,\n  CircularProgress,\n  Paper\n} from '@mui/material';\nimport TranscriptCard from '../components/TranscriptCard';\nimport transcriptService from '../services/transcriptService';\n\nconst TranscriptsPage = () => {\n  const [videoUrl, setVideoUrl] = useState('');\n  const [transcripts, setTranscripts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    fetchTranscripts();\n  }, []);\n\n  const fetchTranscripts = async () => {\n    try {\n      const data = await transcriptService.getAllTranscripts();\n      setTranscripts(data);\n    } catch (error) {\n      setError('Failed to fetch transcripts. Please try again later.');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      // Extract video ID from URL\n      const videoId = videoUrl.split('v=')[1]?.split('&')[0];\n      if (!videoId) {\n        throw new Error('Invalid YouTube URL');\n      }\n\n      const newTranscript = await transcriptService.createTranscript(videoId);\n      setTranscripts([newTranscript, ...transcripts]);\n      setVideoUrl('');\n      setSuccess('Transcript created successfully!');\n    } catch (error) {\n      setError(error.message || 'Failed to create transcript. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await transcriptService.deleteTranscript(id);\n      setTranscripts(transcripts.filter(t => t.id !== id));\n      setSuccess('Transcript deleted successfully!');\n    } catch (error) {\n      setError('Failed to delete transcript. Please try again.');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        My Transcripts\n      </Typography>\n\n      <Paper \n        component=\"form\" \n        onSubmit={handleSubmit}\n        sx={{ p: 3, mb: 4, backgroundColor: 'background.paper' }}\n      >\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <TextField\n            fullWidth\n            label=\"YouTube Video URL\"\n            value={videoUrl}\n            onChange={(e) => setVideoUrl(e.target.value)}\n            placeholder=\"https://www.youtube.com/watch?v=...\"\n            disabled={loading}\n          />\n          <Button \n            variant=\"contained\" \n            type=\"submit\"\n            disabled={loading || !videoUrl}\n            sx={{ minWidth: 200 }}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Create Transcript'}\n          </Button>\n        </Box>\n      </Paper>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\n          {success}\n        </Alert>\n      )}\n\n      <Box sx={{ mt: 4 }}>\n        {transcripts.length === 0 ? (\n          <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\n            No transcripts yet. Create one by pasting a YouTube URL above!\n          </Typography>\n        ) : (\n          transcripts.map(transcript => (\n            <TranscriptCard\n              key={transcript.id}\n              transcript={transcript}\n              onDelete={handleDelete}\n            />\n          ))\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default TranscriptsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const response = await axios.post(`${API_URL}/auth/refresh/`, {\n        refresh: refreshToken\n      });\n      const {\n        access\n      } = response.data;\n      localStorage.setItem('accessToken', access);\n      originalRequest.headers['Authorization'] = `Bearer ${access}`;\n      return api(originalRequest);\n    } catch (err) {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('userInfo');\n      window.location.href = '/login';\n      return Promise.reject(error);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","err","removeItem","window","location","href"],"sources":["/Users/arvindsudarshan/Documents/Hindi-QA/frontend/src/services/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// Add request interceptor to add auth token to all requests\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('accessToken');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n        \n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n            \n            try {\n                const refreshToken = localStorage.getItem('refreshToken');\n                const response = await axios.post(`${API_URL}/auth/refresh/`, {\n                    refresh: refreshToken\n                });\n                \n                const { access } = response.data;\n                localStorage.setItem('accessToken', access);\n                \n                originalRequest.headers['Authorization'] = `Bearer ${access}`;\n                return api(originalRequest);\n            } catch (err) {\n                localStorage.removeItem('accessToken');\n                localStorage.removeItem('refreshToken');\n                localStorage.removeItem('userInfo');\n                window.location.href = '/login';\n                return Promise.reject(error);\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CACxBS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACb,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAAM;EAEpC,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC3DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACA,MAAMC,YAAY,GAAGX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAACuB,IAAI,CAAC,GAAGtB,OAAO,gBAAgB,EAAE;QAC1DuB,OAAO,EAAEF;MACb,CAAC,CAAC;MAEF,MAAM;QAAEG;MAAO,CAAC,GAAGR,QAAQ,CAACS,IAAI;MAChCf,YAAY,CAACgB,OAAO,CAAC,aAAa,EAAEF,MAAM,CAAC;MAE3CN,eAAe,CAACd,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUoB,MAAM,EAAE;MAC7D,OAAOvB,GAAG,CAACiB,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVjB,YAAY,CAACkB,UAAU,CAAC,aAAa,CAAC;MACtClB,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC;MACvClB,YAAY,CAACkB,UAAU,CAAC,UAAU,CAAC;MACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOjB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAChC;EACJ;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}